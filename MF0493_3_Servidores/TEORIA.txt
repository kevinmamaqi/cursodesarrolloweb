1. ¿Qué es Internet, Extranet e Intranet?

1.1 INTERNET
- Red de redes.
- Gobernada por protocolos en donde los TCP/IP son los más importantes.
- Se usan muchos más (FTP, SSH, HTTP) que quedan englobados bajo TCP/IP
- Mediante el uso de los protocolos de Internet podemos conectarnos
    a distintas computadores, e incluso controlarlas.

1.2 INTRANET
- Usa protocolos de Internet.
- No esta conectada a la red de redes.

1.3 EXTRANET
- Usa protocolos de Internet.
- Concede acceso límitado a organiaciones procedentes de la red de redes.

1.4 ¿COMO CONECTARNOS A OTRO EQUIPO?
- Mediante el uso de la IP, dirección que lo identifica y
    el uso de un protocolo como por ejemplo Telnet o SSH.
    * Recordamos: el protocolo TCP es para transferir datos.

_________________________________________________


2. ¿Qué es la web?

O mejor dicho la World Wide Web, es un sistema de información basado en
enlaces de hipertexto.Los enlaces apuntan a documentos web (archivos .html)
u otros recursos (imágenes, videos, documentos .PDF).

Utiliza un sistema de URIs (URLs) para localizar dichos documentos.

Detras a de la web esta Internet y sus protocolos, pero, para facilitar
la navegación a los usuarios se uitilzan dominios.

Los dominios son "embellecedores" de las IPs y permiten que (gracias
al protcolo DNS) al buscar google.com, nos dirijamos a los servidores
de Google.com.

_________________________________________________


Para que dos equipos se conecten es necesario que esten conectados a la RED,
y para ser utiles, es necesario saber la dirección IP del servidor y que esta
sea estática. El servidor debe poder accederse de manera no ambigua.


_________________________________________________


A partir de estos conocimientos podemos crear nuestros sistema de
cliente servidor y ofrecer una web al público.

¿CÓMO?

1. Adquiriendo o poniendo en linea un servidor (ordenador), ejemplo ionos.es.
2. Obteniendo la dirección IP del servidor (ordenador).
3. Configurar el servidor, para ello me conecto.
4. PROTOCOLOS para la conexión: protocolo SSH (línea de comandos).
5. Configurar claves RSA por mayor seguridad y conveniencia.
6. Creo usuarios para que gestionen su espacio.
7. Por seguridad, les doy acceso a comandos ROOT, pero con su PWD.
8. Instalar el software necesario para gestionar el acceso WEB.
8.1 MySQL para gestión de bases de datos.
8.2 VIM para edición de archivos.
8.3 Instalamos PHP por ser el lenguaje de programación utilizado.
8.4 Servidor HTTP. En nuestro caso usamos NGINX, puede ser Apache.
8.5 Servidor EMAIL. Postfix.
9. Configuramos usuarios, directorios, permisos para el software.
10. Lo normal es servir las webs en el directorio /var/www/miweb.com/html/

HACIENDO LAS COSAS FÁCILES

1. En lugar de usar VIM, usamos SFTP (extension SFTP)+ Visual Studio Code.
    Nos permiten conectarnos de manera segura,
    navegar los archivos y subirlos al servidor.

2. En lugar de subir los cambios directamente en el servidor,
    usamos un sistema de control de versiones: GIT. Guardamos el repositorio
    en github.
    
    Cada cambio se prueba ne local, se envia a Github y se descarga
    desde el servidor. Si hay un error, volvemos a la versión anterior.

    Si colaboramos con otra gente, cada uno tiene su repositorio y crea
    ramas para evitar conflictos.

COMANDOS BÁSICOS

Conectarse: ssh miusuario@miip + contraseña.
    ssh ceinaionos@82.213.33.131
    password

Navegar directorios:
    cd ..                               -> ir un directorio arriba.
    cd nombredirectorio                 -> ir al directorio
    ls                                  -> listar los archivos del directorio actual
    ls -l                               -> listar los archivos de forma ordenada.
    cp archivo.txt copia.txt            -> copar un archivo
    rm                                  -> eliminar un archivo

Editar archivos:
    vim nombrearchivo                   -> abrir archivo en VIM
    i                                   -> entramos en modo edición
    ESC + :wq                           -> guardamos el archivo y salimos de VIM

Crear repositorios:
    git init                            -> inicializar repositorio en carpeta actual.
    git add .                           -> añadimos los archivos a stage (track)
    git commit                          -> creamos un commit. Un punto en el tiempo con unos cambios dados.
    git commit -m "Mi mensaje"          -> mensaje del commit.
    git branch nombrerama               -> crea una rama.
    git checkout nombrerama             -> cambia de rama.
    git checkout -b nombrerama          -> crea un rama y cambia de rama.
    git log --oneline                   -> ver los cambios en una linea, de último a primero.
    git reset --hard idcommit           -> resetea el repositorio al commit introducido
    
    git remote add origin URLREMOTA     -> Añade un repositorio remoto como origen.
    git push -u origin nombrerama       -> Enviamos la rama al repositorio
    git pull                            -> Descargamos en nuestra rama, la última versión del repositorio.